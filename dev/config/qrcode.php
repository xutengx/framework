<?php

/**
 * 本配置将直接赋值给 new chillerlan\QRCode\QROptions 对象
 * 更改 : 你可以在任何地方重新定义这些属性, 因为,他们都是 public, 在你不定义的时候这些就是缺省值
 * 新增 : 依照 chillerlan\QRCode\QROptions 的实例, 你可以加入任何有效属性在此
 */
return [
	/*
	  |--------------------------------------------------------------------------
	  |
	  |--------------------------------------------------------------------------
	  | QR Code version number
	  |
	  | Supported: [1 ... 40] or QRCode::VERSION_AUTO (-1)
	  |
	 */
	'version' => -1,
	/*
	  |--------------------------------------------------------------------------
	  |
	  |--------------------------------------------------------------------------
	  | Error correct level
	  |
	  | Supported: QRCode::ECC_X where X is:
	  |   L =  7% (0b01), default
	  |   M = 15% (0b00)
	  |   Q = 25% (0b11)
	  |   H = 30% (0b10)
	  |
	 */
	'eccLevel' => 0b01,
	/*
	  |--------------------------------------------------------------------------
	  | 图片类型
	  |--------------------------------------------------------------------------
	  |
	  | Supported: "png", "jpg", "gif", "html", "svg", "text", "json" -> (QRCode::OUTPUT_*)
	  |
	 */
	'outputType' => 'png',
	/*
	  |--------------------------------------------------------------------------
	  |
	  |--------------------------------------------------------------------------
	  | the FQCN of the custom QROutputInterface if $outputType is set to QRCode::OUTPUT_CUSTOM
	  |
	  | Supported: "\Namespace\to\Your\Class", MyOutputClass::class, ...
	  |
	 */
	'outputInterface' => null,
	/*
	  |--------------------------------------------------------------------------
	  | 图片存储路径以及文件名后缀, null则返回内容
	  |--------------------------------------------------------------------------
	  | optional cache file path (eg:/mnt/qrcode.png), null returns the image data
	  |
	  | Supported: null, string
	  |
	 */
	'cachefile' => null,
	/*
	  |--------------------------------------------------------------------------
	  | 是否返回base64格式, 否则返回二进制
	  |--------------------------------------------------------------------------
	  | wether to return the image data as base64
	  | or raw like from file_get_contents()
	  |
	  | Supported: true, false
	  |
	 */
	'imageBase64' => true,
	/*
	  |--------------------------------------------------------------------------
	  | 图片像素大小
	  |--------------------------------------------------------------------------
	  | size of a QR code pixel [SVG, IMAGE_*], HTML -> via CSS
	  |
	  | Supported: 1 ... 25
	  |
	 */
	'scale' => 5,
	/*
	  |--------------------------------------------------------------------------
	  |
	  |--------------------------------------------------------------------------
	  | Add a "quiet zone" (margin) according to the QR code spec
	  |
	  | Supported: true, false
	  |
	 */
	'addQuietzone' => true,
	/*
	  |--------------------------------------------------------------------------
	  |
	  |--------------------------------------------------------------------------
	  | Size of the quiet zone
	  |
	  | internally clamped to [0 ... $moduleCount / 2], defaults to 4 modules
	  |
	 */
	'quietzoneSize' => 4,
	/*
	  |--------------------------------------------------------------------------
	  | 是否透明 ( 不支持jpeg )
	  |--------------------------------------------------------------------------
	  | toggle transparency (no jpeg support)
	  |
	  | Supported: true, false
	  |
	 */
	'transparent' => true,
	/*
	  |--------------------------------------------------------------------------
	  |
	  |--------------------------------------------------------------------------
	  | Transparency color for imagecolortransparent() if transparency is enabled
	  |
	  | Supported: array [R, G, B]
	 */
	'imageTransparencyBG' => [255, 255, 255],
	/*
	  |--------------------------------------------------------------------------
	  |
	  |--------------------------------------------------------------------------
	  | Module values map, see \chillerlan\QRCode\QRMatrix::M_* constants
	  |
	  | - HTML/SVG : #ABCDEF, cssname, rgb(), rgba()...
	  | - IMAGE: [63, 127, 255] // R, G, B
	  |
	 */
	'moduleValues' => [
		// finder
		1536 => [0, 0, 0], // dark (true)
		6	 => [255, 255, 255], // light (false), white is the transparency color and is enabled by default
		// alignment
		2560 => [0, 0, 0],
		10	 => [255, 255, 255],
		// timing
		3072 => [0, 0, 0],
		12	 => [255, 255, 255],
		// format
		3584 => [0, 0, 0],
		14	 => [255, 255, 255],
		// version
		4096 => [0, 0, 0],
		16	 => [255, 255, 255],
		// data
		1024 => [0, 0, 0],
		4	 => [255, 255, 255],
		// darkmodule
		512	 => [0, 0, 0],
		// separator
		8	 => [255, 255, 255],
		// quietzone
		18	 => [255, 255, 255],
	],
	/*
	  |--------------------------------------------------------------------------
	  |
	  |--------------------------------------------------------------------------
	  | imagepng() compression level, -1 = auto
	  |
	  | Supported: -1 ... 9
	  |
	 */
	'pngCompression' => -1,
	/*
	  |--------------------------------------------------------------------------
	  |
	  |--------------------------------------------------------------------------
	  | imagejpeg() quality
	  |
	  | Supported: 0 - 100
	  |
	 */
	'jpegQuality' => 85,
];
